# Inside the Cluster

# Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: go-backend-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: go-backend
  template:
    metadata:
      labels:
        app: go-backend
    spec:
      serviceAccountName: my-service-account
      containers:
      - name: go-backend
        image: jano844/level3-test:latest
        ports:
        - containerPort: 8080
        imagePullPolicy: IfNotPresent
        resources:
          requests:
            cpu: "100m"
            memory: "128Mi"
          limits:
            cpu: "500m"
            memory: "256Mi"

---

apiVersion: v1
kind: Service
metadata:
  name: go-backend-service
spec:
  selector:
    app: go-backend
  ports:
  - protocol: TCP
    port: 8080
    targetPort: 8080
    nodePort: 30800
  type: NodePort

---

apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-service-account
  namespace: default

---


apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: pod-reader
  namespace: default
rules:
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["get", "list"]

---

apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: pod-reader-binding
  namespace: default
subjects:
  - kind: ServiceAccount
    name: my-service-account
    namespace: default
roleRef:
  kind: Role
  name: pod-reader
  apiGroup: rbac.authorization.k8s.io
